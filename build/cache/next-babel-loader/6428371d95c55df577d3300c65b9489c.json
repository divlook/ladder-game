{"ast":null,"code":"import { init as SentryInit, withScope as SentryWithScope, captureException as SentryCaptureException } from '@sentry/browser';\nimport { NODE_ENV, LADDER_VERSION, SENTRY_DSN } from '~/lib/constants';\nconst hasSentryDSN = !!SENTRY_DSN;\nexport const init = () => {\n  if (hasSentryDSN) {\n    SentryInit({\n      dsn: SENTRY_DSN,\n      environment: NODE_ENV,\n      release: LADDER_VERSION\n    });\n  }\n};\nexport const withScope = callback => {\n  if (hasSentryDSN) SentryWithScope(callback);\n};\nexport const captureException = error => {\n  return hasSentryDSN ? SentryCaptureException(error) : '';\n};","map":{"version":3,"sources":["/Users/chad/_workspace/ladder-game/plugins/sentry.ts"],"names":["init","SentryInit","withScope","SentryWithScope","captureException","SentryCaptureException","NODE_ENV","LADDER_VERSION","SENTRY_DSN","hasSentryDSN","dsn","environment","release","callback","error"],"mappings":"AAAA,SACIA,IAAI,IAAIC,UADZ,EAEIC,SAAS,IAAIC,eAFjB,EAGIC,gBAAgB,IAAIC,sBAHxB,QAKO,iBALP;AAMA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,UAAnC,QAAqD,iBAArD;AAEA,MAAMC,YAAY,GAAG,CAAC,CAACD,UAAvB;AAEA,OAAO,MAAMR,IAAI,GAAG,MAAM;AACtB,MAAIS,YAAJ,EAAkB;AACdR,IAAAA,UAAU,CAAC;AACPS,MAAAA,GAAG,EAAEF,UADE;AAEPG,MAAAA,WAAW,EAAEL,QAFN;AAGPM,MAAAA,OAAO,EAAEL;AAHF,KAAD,CAAV;AAKH;AACJ,CARM;AAUP,OAAO,MAAML,SAAS,GAAIW,QAAD,IAAsC;AAC3D,MAAIJ,YAAJ,EAAkBN,eAAe,CAACU,QAAD,CAAf;AACrB,CAFM;AAIP,OAAO,MAAMT,gBAAgB,GAAGU,KAAK,IAAI;AACrC,SAAOL,YAAY,GAAGJ,sBAAsB,CAACS,KAAD,CAAzB,GAAmC,EAAtD;AACH,CAFM","sourcesContent":["import {\n    init as SentryInit,\n    withScope as SentryWithScope,\n    captureException as SentryCaptureException,\n    Scope,\n} from '@sentry/browser'\nimport { NODE_ENV, LADDER_VERSION, SENTRY_DSN } from '~/lib/constants'\n\nconst hasSentryDSN = !!SENTRY_DSN\n\nexport const init = () => {\n    if (hasSentryDSN) {\n        SentryInit({\n            dsn: SENTRY_DSN,\n            environment: NODE_ENV,\n            release: LADDER_VERSION,\n        })\n    }\n}\n\nexport const withScope = (callback: (scope: Scope) => void) => {\n    if (hasSentryDSN) SentryWithScope(callback)\n}\n\nexport const captureException = error => {\n    return hasSentryDSN ? SentryCaptureException(error) : ''\n}\n"]},"metadata":{},"sourceType":"module"}