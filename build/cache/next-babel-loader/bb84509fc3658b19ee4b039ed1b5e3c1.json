{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar __jsx = React.createElement;\nimport React, { useState, useReducer, useEffect, useRef } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport DefaultLayout from '~/layouts/DefaultLayout';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core';\nimport IndexReducer, { initialState } from '~/reducers/index.reducer';\nimport * as IndexAction from '~/reducers/index.action';\nimport LadderGame from '~/components/LadderGame';\nexport var useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    textField: {\n      marginRight: theme.spacing(1),\n      '&:last-child': {\n        marginRight: theme.spacing(0)\n      }\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      '&:last-child': {\n        marginRight: theme.spacing(0)\n      }\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2)\n    },\n    resetContainer: {\n      padding: theme.spacing(3)\n    }\n  };\n});\n\nvar IndexPage = function IndexPage() {\n  var classes = useStyles();\n  var steps = ['몇 개의 사다리가 필요하신가요?', '이름을 입력해주세요.', '보상을 입력해주세요.'];\n\n  var _useState = useState(0),\n      activeStep = _useState[0],\n      setActiveStep = _useState[1];\n\n  var _useReducer = useReducer(IndexReducer, initialState),\n      store = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var formRef = useRef(null);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n  };\n\n  var handleNext = function handleNext() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleReset = function handleReset() {\n    var _formRef$current;\n\n    setActiveStep(0);\n    dispatch(IndexAction.resetAll());\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.reset();\n  };\n\n  var changeLadderQty = function changeLadderQty(e) {\n    var _e$target;\n\n    dispatch(IndexAction.changeLadderQty(Number(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value)));\n  };\n\n  var changeName = function changeName(index) {\n    return function (e) {\n      var _e$target2;\n\n      dispatch(IndexAction.changeName(index, e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value));\n    };\n  };\n\n  var changeReward = function changeReward(index) {\n    return function (e) {\n      var _e$target3;\n\n      dispatch(IndexAction.changeReward(index, e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.value));\n    };\n  };\n\n  useEffect(function () {\n    console.log(store);\n  }, [store]);\n  return __jsx(DefaultLayout, null, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    align: \"center\"\n  }, \"\\uD83D\\uDC4B \\uC548\\uB155\\uD558\\uC138\\uC694!\"), __jsx(\"form\", {\n    ref: formRef,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit\n  }, __jsx(Stepper, {\n    activeStep: activeStep,\n    orientation: \"vertical\"\n  }, steps.map(function (label, currentStep) {\n    var isError = false;\n    return __jsx(Step, {\n      key: label\n    }, __jsx(StepLabel, null, label), __jsx(StepContent, null, function () {\n      switch (currentStep) {\n        case 0:\n          {\n            isError = !store.ladderQty || store.ladderQty <= 1 || store.ladderQty > 20;\n            return __jsx(TextField, {\n              className: classes.textField,\n              type: \"number\",\n              label: isError ? '숫자 2이상 20이하' : '',\n              error: isError,\n              onChange: changeLadderQty,\n              defaultValue: !isError && store.ladderQty || ''\n            });\n          }\n\n        case 1:\n          {\n            return __jsx(React.Fragment, null, _Array$from({\n              length: store.ladderQty\n            }).map(function (row, key) {\n              return __jsx(TextField, {\n                key: key,\n                className: classes.textField,\n                onChange: changeName(key),\n                defaultValue: store.players[key] || ''\n              });\n            }));\n          }\n\n        case 2:\n          {\n            return __jsx(React.Fragment, null, _Array$from({\n              length: store.ladderQty\n            }).map(function (row, key) {\n              return __jsx(TextField, {\n                key: key,\n                className: classes.textField,\n                onChange: changeReward(key),\n                defaultValue: store.rewards[key] || ''\n              });\n            }));\n          }\n\n        default:\n          return null;\n      }\n    }(), __jsx(Box, {\n      className: classes.actionsContainer\n    }, __jsx(Box, null, __jsx(Button, {\n      disabled: currentStep === 0,\n      onClick: handleBack,\n      className: classes.button\n    }, \"Back\"), __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleNext,\n      className: classes.button,\n      disabled: isError\n    }, \"Next\")))));\n  }))), activeStep === steps.length && __jsx(Paper, {\n    square: true,\n    elevation: 0,\n    className: classes.resetContainer\n  }, __jsx(Box, null, __jsx(LadderGame, store)), __jsx(Box, null, __jsx(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button\n  }, \"Back\"), __jsx(Button, {\n    onClick: handleReset,\n    className: classes.button\n  }, \"Reset\"))));\n};\n\nexport default IndexPage;","map":null,"metadata":{},"sourceType":"module"}