{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport * as Sentry from '~/plugins/sentry';\nimport { initLogRocket } from '~/plugins/logrocket';\nSentry.init();\ninitLogRocket().withSentry(Sentry);\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"getInitialProps\", async appContext => {\n      const appProps = await App.getInitialProps(appContext);\n      return _objectSpread({}, appProps);\n    });\n  }\n\n  componentDidCatch(error, errorInfo) {\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      Sentry.captureException(error);\n    });\n    super.componentDidCatch(error, errorInfo);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Component, pageProps);\n  }\n\n}\n\nMyApp.displayName = \"MyApp\";\nexport default MyApp;","map":{"version":3,"sources":["/Users/chad/Workspace/github/ladder-game/pages/_app.tsx"],"names":["React","App","Sentry","initLogRocket","init","withSentry","MyApp","appContext","appProps","getInitialProps","componentDidCatch","error","errorInfo","withScope","scope","Object","keys","forEach","key","setExtra","captureException","render","Component","pageProps","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAO,yBAAP;AACA,OAAO,2BAAP;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEAD,MAAM,CAACE,IAAP;AACAD,aAAa,GAAGE,UAAhB,CAA2BH,MAA3B;;AAEA,MAAMI,KAAN,SAAoBL,GAApB,CAAwB;AAAA;AAAA;;AAAA,6CACF,MAAOM,UAAP,IAA2B;AACzC,YAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,eAAJ,CAAoBF,UAApB,CAAvB;AACA,+BAAYC,QAAZ;AACH,KAJmB;AAAA;;AAMpBE,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,SAAR,EAAmB;AAChCV,IAAAA,MAAM,CAACW,SAAP,CAAiBC,KAAK,IAAI;AACtBC,MAAAA,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,OAAvB,CAA+BC,GAAG,IAAI;AAClCJ,QAAAA,KAAK,CAACK,QAAN,CAAeD,GAAf,EAAoBN,SAAS,CAACM,GAAD,CAA7B;AACH,OAFD;AAIAhB,MAAAA,MAAM,CAACkB,gBAAP,CAAwBT,KAAxB;AACH,KAND;AAQA,UAAMD,iBAAN,CAAwBC,KAAxB,EAA+BC,SAA/B;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WAAO,MAAC,SAAD,EAAeD,SAAf,CAAP;AACH;;AArBmB;;AAAlBjB,K;AAwBN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport * as Sentry from '~/plugins/sentry'\nimport { initLogRocket } from '~/plugins/logrocket'\n\nSentry.init()\ninitLogRocket().withSentry(Sentry)\n\nclass MyApp extends App {\n    getInitialProps = async (appContext: any) => {\n        const appProps = await App.getInitialProps(appContext)\n        return { ...appProps }\n    }\n\n    componentDidCatch(error, errorInfo) {\n        Sentry.withScope(scope => {\n            Object.keys(errorInfo).forEach(key => {\n                scope.setExtra(key, errorInfo[key])\n            })\n\n            Sentry.captureException(error)\n        })\n\n        super.componentDidCatch(error, errorInfo)\n    }\n\n    render() {\n        const { Component, pageProps } = this.props\n        return <Component {...pageProps} />\n    }\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}