{"ast":null,"code":"import * as Sentry from '@sentry/browser';\nimport { NODE_ENV, LADDER_VERSION, SENTRY_DSN, USE_SENTRY } from '~/lib/constants';\nexport var init = function init() {\n  if (USE_SENTRY) {\n    Sentry.init({\n      dsn: SENTRY_DSN,\n      environment: NODE_ENV,\n      release: LADDER_VERSION\n    });\n  }\n};\nexport var withScope = function withScope(callback) {\n  if (USE_SENTRY) Sentry.withScope(callback);\n};\nexport var captureException = function captureException(error) {\n  return USE_SENTRY ? Sentry.captureException(error) : '';\n};\nexport var configureScope = function configureScope(callback) {\n  if (USE_SENTRY) Sentry.configureScope(callback);\n};","map":{"version":3,"sources":["/Users/chad/Workspace/github/ladder-game/plugins/sentry.ts"],"names":["Sentry","NODE_ENV","LADDER_VERSION","SENTRY_DSN","USE_SENTRY","init","dsn","environment","release","withScope","callback","captureException","error","configureScope"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,iBAAxB;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,UAAnC,EAA+CC,UAA/C,QAAiE,iBAAjE;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACtB,MAAID,UAAJ,EAAgB;AACZJ,IAAAA,MAAM,CAACK,IAAP,CAAY;AACRC,MAAAA,GAAG,EAAEH,UADG;AAERI,MAAAA,WAAW,EAAEN,QAFL;AAGRO,MAAAA,OAAO,EAAEN;AAHD,KAAZ;AAKH;AACJ,CARM;AAUP,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAA6C;AAClE,MAAIN,UAAJ,EAAgBJ,MAAM,CAACS,SAAP,CAAiBC,QAAjB;AACnB,CAFM;AAIP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AACrC,SAAOR,UAAU,GAAGJ,MAAM,CAACW,gBAAP,CAAwBC,KAAxB,CAAH,GAAoC,EAArD;AACH,CAFM;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACH,QAAD,EAA6C;AACvE,MAAIN,UAAJ,EAAgBJ,MAAM,CAACa,cAAP,CAAsBH,QAAtB;AACnB,CAFM","sourcesContent":["import * as Sentry from '@sentry/browser'\nimport { NODE_ENV, LADDER_VERSION, SENTRY_DSN, USE_SENTRY } from '~/lib/constants'\n\nexport const init = () => {\n    if (USE_SENTRY) {\n        Sentry.init({\n            dsn: SENTRY_DSN,\n            environment: NODE_ENV,\n            release: LADDER_VERSION,\n        })\n    }\n}\n\nexport const withScope = (callback: (scope: Sentry.Scope) => void) => {\n    if (USE_SENTRY) Sentry.withScope(callback)\n}\n\nexport const captureException = error => {\n    return USE_SENTRY ? Sentry.captureException(error) : ''\n}\n\nexport const configureScope = (callback: (scope: Sentry.Scope) => void) => {\n    if (USE_SENTRY) Sentry.configureScope(callback)\n}\n"]},"metadata":{},"sourceType":"module"}