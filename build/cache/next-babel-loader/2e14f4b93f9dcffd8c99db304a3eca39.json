{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport * as types from '~/reducers/index.type';\nexport var initialState = {\n  ladderQty: 0,\n  players: [],\n  rewards: []\n};\nexport default (function (state, action) {\n  switch (action.type) {\n    case types.CHANGE_REWARD:\n      {\n        var _action$payload = action.payload,\n            index = _action$payload.index,\n            rewardName = _action$payload.rewardName;\n        state.rewards.splice(index, 1, rewardName);\n        return state;\n      }\n\n    case types.CHANGE_LADDER_QTY:\n      {\n        var ladderQty = action.payload.ladderQty;\n        state.ladderQty = ladderQty;\n        return state;\n      }\n\n    case types.CHANGE_NAME:\n      {\n        var _action$payload2 = action.payload,\n            _index = _action$payload2.index,\n            playerName = _action$payload2.playerName;\n        state.players.splice(_index, 1, playerName);\n        return state;\n      }\n\n    case types.RESET_ALL:\n      {\n        for (var key in state) {\n          if (_Array$isArray(state[key])) {\n            state[key].splice(0, state[key].length);\n          } else {\n            state[key] = initialState[key];\n          }\n        }\n\n        return state;\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n});","map":null,"metadata":{},"sourceType":"module"}